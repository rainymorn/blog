<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RainyMorn&#39;s Blog</title>
  
  <subtitle>Keep going...</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://www.rainymorn.com/blog/"/>
  <updated>2019-05-10T18:00:02.000Z</updated>
  <id>http://www.rainymorn.com/blog/</id>
  
  <author>
    <name>RainyMorn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Build libcurl</title>
    <link href="http://www.rainymorn.com/blog/2019/05/11/Build-libcurl/"/>
    <id>http://www.rainymorn.com/blog/2019/05/11/Build-libcurl/</id>
    <published>2019-05-10T17:52:47.000Z</published>
    <updated>2019-05-10T18:00:02.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h5 id="install-VS2017-or-VS2015"><a href="#install-VS2017-or-VS2015" class="headerlink" title="install VS2017 or VS2015"></a>install VS2017 or VS2015</h5></li><li><h5 id="download-curl-source-and-unzip"><a href="#download-curl-source-and-unzip" class="headerlink" title="download curl source, and unzip"></a>download curl source, and unzip</h5><p><a href="https://curl.haxx.se/download.html" target="_blank" rel="noopener">https://curl.haxx.se/download.html</a></p><blockquote><p>Note:</p><p>choose the source file on the top to download, not the binary file on the bottom.</p></blockquote></li><li><h5 id="run-buildconf-bat-script-with-administrator-rights"><a href="#run-buildconf-bat-script-with-administrator-rights" class="headerlink" title="run buildconf.bat script with administrator rights"></a>run <code>buildconf.bat</code> script with administrator rights</h5><p>After unzip the source zip file, will find the <strong>buildconf.bat</strong> file, in the root folder of the source folder.</p></li><li><h5 id="Run-CMD-as-Administrator-jump-into-winbuild-subfolder"><a href="#Run-CMD-as-Administrator-jump-into-winbuild-subfolder" class="headerlink" title="Run CMD as Administrator, jump into winbuild subfolder"></a>Run CMD as Administrator, jump into <strong>winbuild</strong> subfolder</h5><p>Note: open the command prompt for vs 2017, not the system cmd,</p><p>it can be found in the Start Menu, maybe like this:</p><p><code>x86 Native Tools Command Prompt for VS 2017</code></p><p>jump int <strong>winbuild</strong> subfolder, maybe like this:</p><p><code>cd ~/desktop/curl-7.64.1/winbuild</code></p></li><li><h5 id="input-command-and-compile"><a href="#input-command-and-compile" class="headerlink" title="input command and compile:"></a>input command and compile:</h5><p><code>nmake /f Makefile.vc mode=static VC=14 MACHINE=x64 DEBUG=no</code></p><ul><li><p>mode</p><p><code>static</code> mean building to lib file.</p><p><code>dll</code> mean building to dll file.</p></li><li><p>VC</p><p>14 mean vs2015</p><p>15 mean vs2017</p></li><li><p>MACHINE</p><p>x64  mean 64bit</p><p>x86  mean 32bit</p></li></ul></li><li><h5 id="wait-until-building-completely"><a href="#wait-until-building-completely" class="headerlink" title="wait until building completely"></a>wait until building completely</h5></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h5 id=&quot;install-VS2017-or-VS2015&quot;&gt;&lt;a href=&quot;#install-VS2017-or-VS2015&quot; class=&quot;headerlink&quot; title=&quot;install VS2017 or VS2015&quot;&gt;&lt;/a&gt;insta
      
    
    </summary>
    
      <category term="notes" scheme="http://www.rainymorn.com/blog/categories/notes/"/>
    
    
      <category term="nmake" scheme="http://www.rainymorn.com/blog/tags/nmake/"/>
    
      <category term="curl" scheme="http://www.rainymorn.com/blog/tags/curl/"/>
    
      <category term="lib curl" scheme="http://www.rainymorn.com/blog/tags/lib-curl/"/>
    
  </entry>
  
  <entry>
    <title>the best way to checking a record is existing</title>
    <link href="http://www.rainymorn.com/blog/2019/04/28/the-best-way-to-checking-a-record-is-existing/"/>
    <id>http://www.rainymorn.com/blog/2019/04/28/the-best-way-to-checking-a-record-is-existing/</id>
    <published>2019-04-27T21:30:08.000Z</published>
    <updated>2019-04-27T22:41:53.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="sql-command"><a href="#sql-command" class="headerlink" title="sql command:"></a>sql command:</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> tablename <span class="keyword">WHERE</span> <span class="keyword">ID</span>=<span class="number">123</span> <span class="keyword">LIMIT</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>The <code>limit 1</code> is very important, because after adding this, mysql will stop searching once finding a record.</p><p>So,the checking will only influence 0 or 1 row, so the checking will high efficiently.</p></blockquote></li><li><h4 id="how-to-understand-SELECT-1"><a href="#how-to-understand-SELECT-1" class="headerlink" title="how to understand SELECT 1"></a>how to understand <code>SELECT 1</code></h4><ul><li><p>this will add one temporary column in the <strong>search result</strong>:</p><p>in the temporary column,</p><p>the column name is 1,</p><p>and the all column values is 1.</p><p>the command result maybe like below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; select 1 from student where age&gt;12 limit 5</span><br><span class="line">+---+</span><br><span class="line">| 1 |</span><br><span class="line">+---+</span><br><span class="line">| 1 |</span><br><span class="line">| 1 |</span><br><span class="line">| 1 |</span><br><span class="line">| 1 |</span><br><span class="line">| 1 |</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;sql-command&quot;&gt;&lt;a href=&quot;#sql-command&quot; class=&quot;headerlink&quot; title=&quot;sql command:&quot;&gt;&lt;/a&gt;sql command:&lt;/h4&gt;&lt;figure class=&quot;highlight s
      
    
    </summary>
    
      <category term="notes" scheme="http://www.rainymorn.com/blog/categories/notes/"/>
    
    
      <category term="mysql" scheme="http://www.rainymorn.com/blog/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mediator Pattern</title>
    <link href="http://www.rainymorn.com/blog/2019/03/21/Mdeiator-Pattern/"/>
    <id>http://www.rainymorn.com/blog/2019/03/21/Mdeiator-Pattern/</id>
    <published>2019-03-20T18:28:48.000Z</published>
    <updated>2019-03-21T10:28:15.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h4 id="concept"><a href="#concept" class="headerlink" title="concept"></a>concept</h4><p>Define a mediator object that encapsulates how a set of colleague objects interacts. </p><p>In other words, process colleague objects’s all interaction and community in a mediator object,</p><p>the mediator object is the community center of colleague objects, and is in charge of routing the message.</p></li><li><h4 id="advantage"><a href="#advantage" class="headerlink" title="advantage"></a>advantage</h4><p>Promotes loose coupling by keeping objects from referring to each other explicitly and it lets you vary their interactions independently.</p></li><li><h4 id="disadvantage"><a href="#disadvantage" class="headerlink" title="disadvantage:"></a>disadvantage:</h4><ul><li><p>if there are many colleague objects, the mediator object will become very complex.</p></li><li><p>easy to misuse:</p><p>When you meet many objects need to intact with each other, don’t use mediator pattern immediately, check if your design is right first.</p></li></ul></li><li><h4 id="When-to-use-mediator-pattern"><a href="#When-to-use-mediator-pattern" class="headerlink" title="When to use mediator pattern?"></a>When to use mediator pattern?</h4><ul><li><p>meet problems below:</p><p>complex reference relationship</p><p>confusion structure</p><p>complex dependency relationship</p><p>hard to reuse the class</p></li></ul></li><li><h4 id="Typical-implementation"><a href="#Typical-implementation" class="headerlink" title="Typical implementation"></a>Typical implementation</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SAFE_DELETE(p) <span class="meta-keyword">if</span> (p) &#123; delete p; p = NULL; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*define mediator class*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mediator</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*define abstract person*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">SetMediator</span><span class="params">(Mediator *mediator)</span></span>&#123;&#125; </span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">SendMessage</span><span class="params">(<span class="built_in">string</span> &amp;message)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">GetMessage</span><span class="params">(<span class="built_in">string</span> &amp;message)</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    Mediator *p_mediator;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*define abstract mediator class*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mediator</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Send</span><span class="params">(<span class="built_in">string</span> &amp;message, Person *person)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">SetRenter</span><span class="params">(Person *renter)</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">SetLandlord</span><span class="params">(Person *landlord)</span></span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*define renter class*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Renter</span>:</span><span class="keyword">public</span> Person</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetMediator</span><span class="params">(Mediator *mediator)</span></span>&#123;p_mediator = mediator;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SendMessage</span><span class="params">(<span class="built_in">string</span> &amp;message)</span></span>&#123; p_mediator-&gt;Send(message,<span class="keyword">this</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetMessage</span><span class="params">(<span class="built_in">string</span> &amp;message)</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"renter receive message frome landlord："</span>&lt;&lt;message;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*define landlord class*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Landlord</span>:</span><span class="keyword">public</span> Person</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetMediator</span><span class="params">(Mediator *mediator)</span></span>&#123;p_mediator = mediator;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SendMessage</span><span class="params">(<span class="built_in">string</span> &amp;message)</span></span>&#123; p_mediator-&gt;Send(message,<span class="keyword">this</span>);&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">GetMessage</span><span class="params">(<span class="built_in">string</span> &amp;message)</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"landlord receivemessage frome render："</span>&lt;&lt;message;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*define concrete mediator class*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HouseMediator</span>:</span><span class="keyword">public</span> Mediator</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    HouseMediator():p_renter(<span class="literal">NULL</span>),p_landlord(<span class="literal">NULL</span>)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetRenter</span><span class="params">(Person *renter)</span></span>&#123;p_renter = renter;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetLandlord</span><span class="params">(Person *landlord)</span></span>&#123;p_landlord = landlord;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Send</span><span class="params">(<span class="built_in">string</span> &amp;message, Person *person)</span></span></span><br><span class="line"><span class="function">    </span>&#123;<span class="comment">//</span></span><br><span class="line">        <span class="keyword">if</span>(person == p_renter)</span><br><span class="line">            p_landlord-&gt;GetMessage(message);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p_renter-&gt;GetMessage(message);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Person *p_renter;</span><br><span class="line">    Person *p_landlord;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    Mediator *mediator = <span class="keyword">new</span> HouseMediator();</span><br><span class="line">    Person *person1 = <span class="keyword">new</span> Renter();</span><br><span class="line">    Person *person2 = <span class="keyword">new</span> Landlord();</span><br><span class="line">    mediator-&gt;SetRenter(person1);</span><br><span class="line">    mediator-&gt;SetLandlord(person2);</span><br><span class="line">    person1-&gt;SetMediator(mediator);</span><br><span class="line">    person2-&gt;SetMediator(mediator);</span><br><span class="line">    person1-&gt;SendMessage(<span class="built_in">string</span>(<span class="string">".........\n"</span>));</span><br><span class="line">    person2-&gt;SendMessage(<span class="built_in">string</span>(<span class="string">"..............\n"</span>));</span><br><span class="line">    SAFE_DELETE(person1);</span><br><span class="line">    SAFE_DELETE(person2)</span><br><span class="line">    SAFE_DELETE(mediator);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h4 id=&quot;concept&quot;&gt;&lt;a href=&quot;#concept&quot; class=&quot;headerlink&quot; title=&quot;concept&quot;&gt;&lt;/a&gt;concept&lt;/h4&gt;&lt;p&gt;Define a mediator object that encapsulate
      
    
    </summary>
    
      <category term="notes" scheme="http://www.rainymorn.com/blog/categories/notes/"/>
    
    
      <category term="cpp" scheme="http://www.rainymorn.com/blog/tags/cpp/"/>
    
      <category term="DesignPattern" scheme="http://www.rainymorn.com/blog/tags/DesignPattern/"/>
    
  </entry>
  
  <entry>
    <title>Build a blog with Github and Hexo</title>
    <link href="http://www.rainymorn.com/blog/2019/03/19/Build-a-blog-with-Github-and-Hexo/"/>
    <id>http://www.rainymorn.com/blog/2019/03/19/Build-a-blog-with-Github-and-Hexo/</id>
    <published>2019-03-19T03:09:10.000Z</published>
    <updated>2019-03-19T08:06:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Build-Steps"><a href="#Build-Steps" class="headerlink" title="Build Steps:"></a>Build Steps:</h2><ul><li><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo:"></a>Install Hexo:</h3><p>There are a lot of tutorials about how to install Hexo on the internet, but it’s better to follow the official tutorial.</p><ol><li><p>Node.js, NPM, Git must be installed in the system</p><p>Check if installed by below commands:</p><p><code>node -v</code></p><p><code>npm -v</code></p><p><code>git --version</code></p></li><li><p><code>npm install hexo-cli -g</code></p><p>This command will install hexo to the system.</p></li><li><p><code>hexo init</code></p><p>Run this command in a folder that you want to set up HexoBlog in it.</p><p>Also can be Follows:</p><p><code>hexo init blog</code></p><p>That means creating your HexoBlog in <code>blog</code> subdirectory.</p><blockquote><p>Note:</p><p>The folder that you want to make HexoBlog in it must be empty.</p></blockquote></li><li><p><code>npm install</code></p></li></ol></li><li><h3 id="Create-a-git-repository"><a href="#Create-a-git-repository" class="headerlink" title="Create a git repository"></a>Create a git repository</h3><p>Must use <code>&lt;github username&gt;.github.io</code> for this repository’s name.</p><blockquote><p>Note:</p><p>If want to create a custom page as the blog home page, then jump to the real blog from this page, follow below steps:</p><ul><li><h4 id="Create-a-git-repository-using-the-blog-as-name-and-enable-GithubPages-feature"><a href="#Create-a-git-repository-using-the-blog-as-name-and-enable-GithubPages-feature" class="headerlink" title="Create a git repository using the blog as name, and enable GithubPages feature"></a>Create a git repository using the <code>blog</code> as name, and enable GithubPages feature</h4><p>The HexoBlog files will be upload to this repository.</p><p>The url of this page will be like below:</p><p><code>&lt;github username&gt;.github.io/blog/</code> </p></li><li><h4 id="Create-a-git-repository-using-lt-github-username-gt-github-io-as-name"><a href="#Create-a-git-repository-using-lt-github-username-gt-github-io-as-name" class="headerlink" title="Create a git repository using &lt;github username&gt;.github.io as name"></a>Create a git repository using <code>&lt;github username&gt;.github.io</code> as name</h4><p>Create a html file with name “index.html”,</p><p>add a link that pointing to the real blog in this file,</p><p>then upload the file to this repository.</p><p>The url of this page will be your main domain:</p><p><code>http://www.x.com</code></p></li><li><h4 id="Modify-hexo-setting"><a href="#Modify-hexo-setting" class="headerlink" title="Modify hexo setting:"></a>Modify hexo setting:</h4><ul><li><h5 id="in-the-main-config-yml-file"><a href="#in-the-main-config-yml-file" class="headerlink" title="in the main _config.yml file:"></a>in the main <code>_config.yml</code> file:</h5><p>Modify the <code>url</code> and <code>root</code> properties like blow:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&gt;     url: http://www.xxx.com/blog</span></span><br><span class="line"><span class="string">&gt;     root: /blog/</span></span><br><span class="line"><span class="string">&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></blockquote><blockquote><ul><li><h5 id="int-the-theme’s-config-yml-file"><a href="#int-the-theme’s-config-yml-file" class="headerlink" title="int the theme’s _config.yml file:"></a>int the theme’s <code>_config.yml</code> file:</h5><p>modify the <code>menu</code> property.</p></li></ul></blockquote></li><li><h3 id="Set-domain-name-resolution-as-below"><a href="#Set-domain-name-resolution-as-below" class="headerlink" title="Set domain name resolution as below:"></a>Set domain name resolution as below:</h3><p><code>A @ &lt;github ip address&gt;</code></p><p><code>CNAME www  &lt;github username&gt;.github.io</code></p><blockquote><p>Get <code>&lt;github ip address&gt;</code> by ping <code>&lt;github username&gt;.github.io</code></p></blockquote><blockquote><p>How to check this setting:</p><p><code>dig +noall +answer xxx.com</code></p></blockquote></li><li><h3 id="Add-CNAME-file"><a href="#Add-CNAME-file" class="headerlink" title="Add CNAME file"></a>Add <code>CNAME</code> file</h3><p>In the HexoBlog main folder’s <code>source</code> subdirectory, add a file named <code>CNAME</code>, write your domain name to this file like below:</p><p><code>www.x.com</code></p><blockquote><p>If you have made a custom page as your blog’s home page, you need to create the <code>CNAME</code> file in the git repository where the custom page is located, not the <code>source</code> folder</p></blockquote></li><li><h3 id="Complete-Hexo’s-deploy-setting-in-the-config-yml-file"><a href="#Complete-Hexo’s-deploy-setting-in-the-config-yml-file" class="headerlink" title="Complete Hexo’s deploy setting in the _config.yml file"></a>Complete Hexo’s <code>deploy</code> setting in the <code>_config.yml</code> file</h3><p>Do as below:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">&lt;git</span> <span class="string">repo</span> <span class="string">SSH</span> <span class="string">link&gt;</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">&lt;github</span> <span class="string">username&gt;</span></span><br><span class="line"><span class="attr">  email:</span> <span class="string">&lt;github</span> <span class="string">email&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>If there are multiple github account, also can replace the hostname with a SSH HostAlias in the <code>&lt;git repo SSH link&gt;</code>.</p></blockquote></li><li><h3 id="Other-details"><a href="#Other-details" class="headerlink" title="Other details:"></a>Other details:</h3><ul><li><h4 id="About-images"><a href="#About-images" class="headerlink" title="About images:"></a>About images:</h4><ul><li><p>In the <code>_config.yml</code> file, enable <code>post_asset_folder</code> setting</p></li><li><p>install this Plug-in:</p><p><code>npm install hexo-asset-image --save</code></p></li></ul></li><li><h4 id="Theme"><a href="#Theme" class="headerlink" title="Theme:"></a>Theme:</h4><ul><li><p>clone to local:</p><p><code>git clone -b master &lt;theme&#39;s git repo linke&gt; themes/melody</code></p></li><li><p>modify <code>_config.yml</code></p></li></ul></li><li><h4 id="Category"><a href="#Category" class="headerlink" title="Category:"></a>Category:</h4><p>The Hexo’s category has order and hierarchy.</p><p>If add two categories for one article, then the second category will become the first category’ subcategory.</p></li><li><h4 id="About-source-folder"><a href="#About-source-folder" class="headerlink" title="About source folder"></a>About <code>source</code> folder</h4><p>Can add files freely in this folder,</p><p>Hexo will auto render the <code>.md</code> and <code>html</code> files in this folder, other files in this folder will be upload to git repository keep original.</p></li></ul></li><li><h3 id="There-are-still-many-places-need-perfect-follow-the-official-tutorial"><a href="#There-are-still-many-places-need-perfect-follow-the-official-tutorial" class="headerlink" title="There are still many places need perfect, follow the official tutorial:"></a>There are still many places need perfect, follow the official tutorial:</h3><p><a href="https://hexo.io/docs/" target="_blank" rel="noopener">https://hexo.io/docs/</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Build-Steps&quot;&gt;&lt;a href=&quot;#Build-Steps&quot; class=&quot;headerlink&quot; title=&quot;Build Steps:&quot;&gt;&lt;/a&gt;Build Steps:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;Install-Hexo&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="notes" scheme="http://www.rainymorn.com/blog/categories/notes/"/>
    
    
      <category term="git" scheme="http://www.rainymorn.com/blog/tags/git/"/>
    
      <category term="hexo" scheme="http://www.rainymorn.com/blog/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>One System Two GitHub Account</title>
    <link href="http://www.rainymorn.com/blog/2019/03/18/One-System-Two-GitHub-Account/"/>
    <id>http://www.rainymorn.com/blog/2019/03/18/One-System-Two-GitHub-Account/</id>
    <published>2019-03-18T04:36:46.000Z</published>
    <updated>2019-03-18T13:41:15.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="One-system-Two-GitHub-account-How-to-connect-github-com-with-SSH"><a href="#One-system-Two-GitHub-account-How-to-connect-github-com-with-SSH" class="headerlink" title="One system,Two GitHub account,How to connect github.com with SSH?"></a>One system,Two GitHub account,How to connect github.com with SSH?</h3><p>For SSH Protocol,We can create several <strong>Host Alias</strong> for one remote host.</p><p>Then,we can set different attribute values(for example: <strong>rsa key file name</strong>) for these <strong>Host Alias</strong>.</p><p>Finally,we can connect this remote host with different <strong>Host Alias</strong>.</p><p>So,through adding two SSH <strong>Host Alias</strong> for github.com,We can connect github.com with indicate <strong>Host Alias</strong>.</p><h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps:"></a>Steps:</h3><ol><li><p>Create <strong>rsa key file</strong>:</p><p><code>ssh-keygen -t rsa -f ~/.ssh/&lt;RsaKeyFileName&gt; -C &quot;yourmail@xxx.com&quot;</code></p><blockquote><p>It’s better not to set the password to null.</p></blockquote></li><li><p>Add <strong>Host Alias</strong>:</p><p>Open this file:<code>~/.ssh/config</code>,add two <strong>Host Alias</strong> as below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Host &lt;HostAlias1&gt;</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/&lt;RsaKeyFileName1&gt;</span><br><span class="line">Host &lt;HostAlias2&gt;</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/&lt;RsaKeyFileName2&gt;</span><br></pre></td></tr></table></figure></li><li><p>Test SSH connection:</p><p><code>ssh -T git@&lt;HostAlias&gt;</code></p></li><li><p>Cancel two git global settings: <code>email</code> and <code>name</code></p><p><code>git config --global --unset user.email</code><br><code>git config --global --unset user.name</code></p><p>Set separate <code>email</code> and <code>name</code> for indicate git repository:</p><p><code>git config  user.email &quot;you@example.com&quot;</code><br><code>git config  user.name &quot;Your Name&quot;</code></p></li><li><p>Modify <code>url link setting</code> of git remote repository:</p><ul><li><p>if a local repository has been created:</p><p><code>vi .git/config</code><br><code>url = git@&lt;HostAlias&gt;:username/repo.git</code></p></li><li><p>if there is not local repository:</p><p><code>git clone git@&lt;HostAlias&gt;:username/repo.git</code></p></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;One-system-Two-GitHub-account-How-to-connect-github-com-with-SSH&quot;&gt;&lt;a href=&quot;#One-system-Two-GitHub-account-How-to-connect-github-com-
      
    
    </summary>
    
      <category term="notes" scheme="http://www.rainymorn.com/blog/categories/notes/"/>
    
    
      <category term="git" scheme="http://www.rainymorn.com/blog/tags/git/"/>
    
      <category term="ssh" scheme="http://www.rainymorn.com/blog/tags/ssh/"/>
    
  </entry>
  
</feed>
